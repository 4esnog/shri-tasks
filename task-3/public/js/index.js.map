{"version":3,"sources":["js/index.js"],"names":["onMagicButtonClick","e","preventDefault","mediaLoadState","alert","setTimeout","bind","this","document","querySelector","style","opacity","canvas","width","videoWidth","height","videoHeight","ctx","fillStyle","canvasBgColor","fillRect","player","appendChild","ui","block","remove","onPlayPause","video","paused","ended","play","scratches","audio","classList","pause","add","onInputChange","type","reader","FileReader","readAsText","target","files","onloadend","subtitles","parseSrt","result","readAsDataURL","createAudio","createVideo","src","createElement","autoplay","volume","controls","defaultMuted","visibility","addEventListener","onVideoPlay","onVideoPause","clientWidth","clientHeight","videoSizeRatio","display","videoTimelineRatio","duration","subtitleStyles","padding","paddingRatio","fontSize","fontRatio","lineInterval","lineIntervalRatio","time","currentTime","toFixed","subtitleIndex","endTime","isSubtitleShown","showSubtitle","hideSubtitle","timeLength","createUI","stop","timeline","setAttribute","value","parseInt","onVolumeChange","onVolumeChangeEnd","drawVideo","backCanvas","drawScratches","removeEventListener","getContext","clearRect","requestAnimationFrame","drawImage","imgData","getImageData","data","i","length","r","g","b","avg","putImageData","scrchVideo","globalAlpha","globalAplha","subtl","canvasTextColor","font","fullTextHeight","content","topPadding","forEach","el","top","left","fillText","console","log","text","timeConst","sec","min","hr","temp","split","map","res","subtitle","number","startTime","startTimeSec","join","startTimeMin","startTimeHr","endTimeSec","endTimeMin","endTimeHr","splice","onWindowResize","documentElement","bodyPadding","download","mime","url","_this","xhr","XMLHttpRequest","open","withCredentials","responseTye","onload","status","Blob","response","send","urls","videoLocal","audioLocal","srt","srtLocal","magicButton","getElementById","videoInput","audioInput","subtitlesInput","bodyStyle","getComputedStyle","querySelectorAll","paddingLeft","paddingRight","videoBrightness","undefined","window"],"mappings":"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","file":"index.js","sourcesContent":["'use strict';\n\n// import srt from 'srt.js';\n\nconst urls = {\n\tvideo: 'https://cache-default04g.cdn.yandex.net/kp.cdn.yandex.net/502838/kinopoisk.ru-Sherlock-284167.mp4',\n\tvideoLocal: '../assets/kinopoisk.ru-Sherlock-284167.mp4',\n\n\taudio: 'https://upload.wikimedia.org/wikipedia/commons/2/2c/The_Entertainer_-_1902_-_By_Scott_Joplin.ogg',\n\taudioLocal: '../assets/The_Entertainer_-_1902_-_By_Scott_Joplin.ogg',\n\n\tsrt: 'https://raw.githubusercontent.com/shri-msk-2016/dz-multimedia/master/subs.srt',\n\tsrtLocal: '../assets/subs.srt'\n};\n\n// Get existing DOM nodes\nlet magicButton = document.getElementById('magic-button');\nlet videoInput = document.getElementById('video');\nlet audioInput = document.getElementById('audio');\nlet subtitlesInput = document.getElementById('subtitles');\nlet scratches = document.getElementById('scratches');\nlet player = document.getElementById('player');\n\n// Init player UI\nlet ui = createUI();\n\n// Init canvas w/ styles\nlet backCanvas = document.createElement('canvas');\nlet canvas = document.createElement('canvas');\nlet\tctx = canvas.getContext('2d');\nlet mediaLoadState = 0;\nlet subtitleIndex = 0;\nlet bodyStyle = getComputedStyle(document.querySelectorAll('body')[0]);\nlet bodyPadding = parseInt(bodyStyle.paddingLeft) + parseInt(bodyStyle.paddingRight);\nlet isSubtitleShown = false;\nlet canvasBgColor = '#101110';\nlet canvasTextColor = '#e1e8e2';\nlet videoBrightness = 2;\nlet subtitleStyles = {\n\tfontRatio: 0.055,\n\tpaddingRatio: 0.1,\n\tlineIntervalRatio: 0.5\n};\nlet\tvideoWidth,\n\t\tvideoHeight,\n\t\tvideoSizeRatio,\n\t\tvideo,\n\t\tvideoTimelineRatio,\n\t\taudio,\n\t\tsubtitles;\n\n// === Set initial event handlers ===\nmagicButton.addEventListener('click', onMagicButtonClick);\nvideoInput.addEventListener('change', onInputChange.bind(this, 'video'));\naudioInput.addEventListener('change', onInputChange.bind(this, 'audio'));\nsubtitlesInput.addEventListener('change', onInputChange.bind(this, 'subtitles'));\ncanvas.addEventListener('click', onPlayPause);\nwindow.addEventListener('resize', onWindowResize);\n\n\n// === Helpers ===\n\n// === Handle \"Maigc\" button click ===\nfunction onMagicButtonClick(e) {\n\te.preventDefault();\n\tif (mediaLoadState < 5) {\n\t\talert('Вы что-то забыли :)');\n\t\treturn;\n\n\t} else if (mediaLoadState < 6) {\n\t\tsetTimeout(onMagicButtonClick.bind(this, e), 400);\n\t\tdocument.querySelector('#popup .popup').style.opacity = '0.5';\n\t\treturn;\n\n\t}\n\n\tcanvas.width = videoWidth;\n\tcanvas.height = videoHeight;\n\tctx.fillStyle = canvasBgColor;\n\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\tplayer.appendChild(ui.block);\n\tplayer.appendChild(canvas);\n\n\tdocument.querySelector('#popup').remove();\n}\n\nfunction onPlayPause(e) {\n\tif (video.paused || video.ended) {\n\t\tvideo.play();\n\t\tscratches.play();\n\t\taudio.play();\n\t\tui.play.classList.remove('paused');\n\t} else {\n\t\tvideo.pause();\n\t\tscratches.pause();\n\t\taudio.pause();\n\t\tui.play.classList.add('paused');\n\t}\n}\n\n\n// === Process input ===\nfunction onInputChange(type, e) {\n\t\n\tlet reader = new FileReader();\n\n\tif (type === 'subtitles') {\n\t\treader.readAsText(e.target.files[0]);\n\t\tmediaLoadState++;\n\t\treader.onloadend = (e) => {\t\t\n\t\t\tsubtitles = parseSrt(reader.result);\n\t\t\tmediaLoadState++;\n\t\t}\n\n\t} else if (type === 'audio') {\n\t\treader.readAsDataURL(e.target.files[0]);\n\t\tmediaLoadState++;\n\t\treader.onloadend = (e) => {\t\t\n\t\t\taudio = createAudio(reader.result);\n\t\t\t// popup.appendChild(audio);\n\t\t\t// audio.controls = true;\n\t\t\tmediaLoadState++;\n\t\t}\n\n\t} else if (type === 'video') {\n\t\treader.readAsDataURL(e.target.files[0]);\n\t\tmediaLoadState++;\n\t\treader.onloadend = (e) => {\t\t\n\t\t\tvideo = createVideo(reader.result);\n\t\t\tmediaLoadState++;\n\t\t}\n\n\t}\n\n}\n\n// === Process audio from input ===\nfunction createAudio(src) {\n\tlet audio = document.createElement('audio');\n\taudio.src = src;\n\taudio.autoplay = false;\n\taudio.volume = 0.5;\n\n\t// audio.addEventListener('canplay', (e) => {\n\t// \t// console.dir('Загружено');\n\t// \tlet audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n\t// \tlet source = audioCtx.createMediaElementSource(audio);\n\t// \tlet leftPan = audioCtx.createStereoPanner();\n\t// \tleftPan.pan.value = -1;\n\t// \t// let rightPan = audioCtx.createStereoPanner();\n\t// \t// rightPan.pan.value = 1;\n\n\t// \tlet gainNode = audioCtx.createGain();\n\n\t\t\n\t// \tsource.connect(gainNode);\n\t// \t// source.connect(rightPan);\n\t// \t// leftPan.connect(gainNode);\n\t// \tgainNode.connect(audioCtx.destination);\n\n\t// \t// source.connect(audioCtx.destination);\n\t// });\n\t\n\n\treturn audio;\n}\n\n// === Process video from input ===\nfunction createVideo(src) {\n\tlet video = document.createElement('video');\n\tvideo.src = src;\n\tvideo.autoplay = false;\n\tvideo.controls = true;\n\tvideo.defaultMuted = true;\n\tvideo.style.visibility = 'hidden';\n\n\tvideo.addEventListener('play', onVideoPlay, false);\n\tvideo.addEventListener('pause', onVideoPause, false);\n\tvideo.addEventListener('loadeddata', (e) => {\n\t\tdocument.querySelector('body').appendChild(video);\n\t\tvideoWidth = video.clientWidth;\n\t\tvideoHeight = video.clientHeight;\n\t\tvideoSizeRatio = videoWidth / videoHeight;\n\t\t// console.dir(videoSizeRatio);\n\t\tvideo.style.display = 'none';\n\t\tvideoTimelineRatio = video.duration / 100;\n\n\t\tsubtitleStyles.padding = videoWidth * subtitleStyles.paddingRatio;\n\t\tsubtitleStyles.fontSize = videoHeight * subtitleStyles.fontRatio;\n\t\tsubtitleStyles.lineInterval = subtitleStyles.fontSize * subtitleStyles.lineIntervalRatio;\n\t\t// console.dir(subtitleStyles);\n\t});\n\n\tvideo.addEventListener('timeupdate', (e) => {\n\t\tlet time = (e.target.currentTime * 1000).toFixed();\n\t\tif (time >= subtitles[subtitleIndex].endTime) {\n\t\t\t// console.log( 'Let\\'s show subtitles! Time: ' + time );\n\t\t\tisSubtitleShown = true;\n\t\t\tshowSubtitle(subtitles[subtitleIndex]);\n\t\t\tsetTimeout(hideSubtitle, subtitles[subtitleIndex].timeLength);\n\t\t}\n\t\t\n\t});\n\n\treturn video;\n}\n\n// === Init UI for canvas player\nfunction createUI() {\n\tlet ui = {\n\t\tblock: document.createElement('div'),\n\t\tplay: document.createElement('div'),\n\t\tstop: document.createElement('div'),\n\t\ttimeline: document.createElement('input'),\n\t\tvolume: document.createElement('input')\n\t};\n\tui.block.classList.add('player-ui');\n\tui.block.appendChild(ui.play);\n\tui.block.appendChild(ui.stop);\n\tui.block.appendChild(ui.timeline);\n\tui.block.appendChild(ui.volume);\n\n\tui.play.classList.add('player-ui__el', 'player-ui__el_play-pause', 'paused');\n\tui.stop.classList.add('player-ui__el', 'player-ui__el_stop');\n\tui.timeline.setAttribute('type', 'range');\n\tui.timeline.classList.add('player-ui__el', 'player-ui__el_timeline');\n\tui.timeline.value = 0;\n\tui.volume.setAttribute('type', 'range');\n\tui.volume.setAttribute('touch-action', 'none');\n\tui.volume.classList.add('player-ui__el', 'player-ui__el_volume');\n\n\tui.play.addEventListener('click', onPlayPause);\n\n\tui.stop.addEventListener('click', (e) => {\n\t\tvideo.pause();\n\t\tscratches.pause();\n\t\taudio.pause();\n\t\tvideo.currentTime = 0;\n\t\taudio.currentTime = 0;\n\t\tsubtitleIndex = 0;\n\t\tui.play.classList.add('paused');\n\t\tui.timeline.value = 0;\n\t});\n\n\tui.timeline.addEventListener('change', (e) => {\n\t\tvideo.currentTime = parseInt(e.target.value) * videoTimelineRatio;\n\t\taudio.currentTime = video.currentTime;\n\t});\n\n\tui.volume.addEventListener('pointerdown', (e) => {\n\t\te.target.addEventListener('pointermove', onVolumeChange);\n\t\te.target.addEventListener('pointerup', onVolumeChangeEnd);\n\t});\n\n\tui.volume.addEventListener('click', (e) => {\n\t\taudio.volume = e.target.value / 100;\n\t\tif (audio.volume === 0) {\n\t\t\te.target.classList.add('muted');\n\t\t} else {\n\t\t\te.target.classList.remove('muted');\n\t\t}\n\t});\n\n\treturn ui;\n}\n\n// === Process video.play() ===\nfunction onVideoPlay(e) {\n\tscratches.play();\n\tdrawVideo(video, scratches, canvas, backCanvas, videoWidth, videoHeight);\n\tdrawScratches(scratches, canvas, videoWidth, videoHeight);\n\taudio.play();\n}\n\n// === Process video.pause() ===\nfunction onVideoPause(e) {\n\t// video.pause();\n\t// audio.pause();\n}\n\nfunction onVolumeChange(e) {\n\taudio.volume = parseInt(e.target.value) / 100;\n\tif (audio.volume === 0) {\n\t\te.target.classList.add('muted');\n\t} else {\n\t\te.target.classList.remove('muted');\n\t}\n}\n\nfunction onVolumeChangeEnd(e) {\n\te.target.removeEventListener('pointermove', onVolumeChange);\n\te.target.removeEventListener('pointerup', onVolumeChangeEnd);\n}\n\n// === Draw video on canvas with Effects ===\nfunction drawVideo(video, scratches, canvas, backCanvas, width, height) {\n\t\n\tif (video.paused || video.ended) {\n\t\treturn false;\n\t}\n\n\tlet ctx = canvas.getContext('2d');\n\t// let bctx = backCanvas.getContext('2d');\n\n\t// bctx.clearRect(0, 0, backCanvas.width, backCanvas.height);\n\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\n\trequestAnimationFrame(() => {\n\t\t\n\t\tctx.drawImage(video, 0, 0, width, height);\n\t\tlet imgData = ctx.getImageData(0, 0, width, height);\n\t\tlet data = imgData.data;\n\n\t\tfor (let i = 0; i < data.length; i+=4) {\n\t\t\tlet r = data[i];\n\t\t\tlet g = data[i+1];\n\t\t\tlet b = data[i+2];\n\n\t\t\tlet avg = ((0.21 * r) + (0.72 * g) + (0.07 * b)) * 3;\n\n\t\t\tdata[i] = avg;\n\t\t\tdata[i+1] = avg;\n\t\t\tdata[i+2] = avg;\n\t\t}\n\n\t\tctx.putImageData(imgData, 0, 0);\n\t\t\n\t});\n\t\n\n\tsetTimeout(drawVideo, 20, video, scratches, canvas, backCanvas, videoWidth, videoHeight);\n}\n\nfunction drawScratches(scrchVideo, canvas, width, height) {\n\tif (scrchVideo.paused || scrchVideo.ended) {\n\t\treturn false;\n\t}\n\n\tlet ctx = canvas.getContext('2d');\n\n\trequestAnimationFrame(() => {\n\t\t// ctx.clearRect(0, 0, width, height);\n\t\tctx.globalAlpha = 0.2;\n\t\tctx.drawImage(scrchVideo, 0, 0, width, height);\n\t\tctx.globalAplha = 1;\n\t});\n\n\tsetTimeout(drawScratches, 20, scrchVideo, canvas, width, height);\n}\n\nfunction showSubtitle(subtl) {\n\n\tif (!isSubtitleShown) {\n\t\tconsole.log('Don\\'t show :(');\n\t\treturn false;\n\t}\n\n\t// isSubtitleShown = true;\n\tvideo.pause();\n\trequestAnimationFrame(() => {\n\t\tctx.fillStyle = canvasBgColor;\n\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\t\tctx.fillStyle = canvasTextColor;\n\t\tctx.font = `${subtitleStyles.fontSize}px Oranienbaum bold, serif`;\n\n\t\tlet fullTextHeight = (subtl.content.length * subtitleStyles.fontSize)\n\t\t\t\t\t\t\t\t + ((subtl.content.length - 1) * subtitleStyles.lineInterval);\n\t\tlet topPadding = (videoHeight - fullTextHeight) / 2;\n\n\t\tsubtl.content.forEach((el, i) => {\n\t\t\tlet top = topPadding + (subtitleStyles.fontSize * i)\n\t\t\t\t\t\t\t\t+ (subtitleStyles.lineInterval * i);\n\t\t\tlet left = subtitleStyles.padding;\n\t\t\tctx.fillText(el, left, top);\n\t\t});\n\t});\n\n\tsetTimeout(showSubtitle, 20, subtl);\n\t\n}\n\nfunction hideSubtitle() {\n\tisSubtitleShown = false;\n\tsubtitleIndex++;\n\tvideo.play();\n}\n\n// === Parse .SRT to Array of subtitles ===\nfunction parseSrt(text) {\n\tlet timeConst = {\n\t\tsec: 1000,\n\t\tmin: 60,\n\t\thr: 60\n\t};\n\tlet temp = text.split('\\n\\n');\n\n\tlet result = temp.map((el) => {\n\n\t\tlet res = {};\n\t\tlet subtitle = el.split('\\n');\n\n\t\t// === Get subtitle's number ===\n\t\tres.number = parseInt(subtitle[0]);\n\n\t\tlet time = subtitle[1].split(' --> ');\n\n\t\t// === Convert start time to MS ===\n\t\tlet startTime = time[0].split(':');\n\t\tlet startTimeSec = parseInt(startTime[2].split(',').join(''));\n\t\tlet startTimeMin = parseInt(startTime[1]) * timeConst.min * timeConst.sec;\n\t\tlet startTimeHr = parseInt(startTime[0]) * timeConst.hr * timeConst.min * timeConst.sec;\n\t\tstartTime = startTimeSec + startTimeMin\t+ startTimeHr;\n\t\tres.startTime = startTime;\n\n\t\t// === Convert end time to MS ===\n\t\tlet endTime = time[1].split(':');\n\t\tlet endTimeSec = parseInt(endTime[2].split(',').join(''));\n\t\tlet endTimeMin = parseInt(endTime[1]) * timeConst.min * timeConst.sec;\n\t\tlet endTimeHr = parseInt(endTime[0]) * timeConst.hr * timeConst.min * timeConst.sec;\n\t\tendTime = endTimeSec + endTimeMin\t+ endTimeHr;\n\t\tres.endTime = endTime;\n\n\t\tres.timeLength = endTime - startTime;\n\n\t\t// res.content = subtitle.reduce((prev, el, i) => {\n\t\t// \tif (i > 1) {\n\t\t// \t\treturn prev + el + '\\n';\n\t\t// \t} else {\n\t\t// \t\treturn '';\n\t\t// \t}\n\t\t// });\n\n\t\t// === Join subtitle content ===\n\t\tsubtitle.splice(0, 2);\n\t\tres.content = subtitle;\n\n\t\treturn res;\n\t});\n\n\treturn result;\n\n}\n\nfunction onWindowResize(e) {\n\t\n\tvideoWidth = document.documentElement.clientWidth - bodyPadding;\n\tvideoHeight = videoWidth / videoSizeRatio;\n\tcanvas.width = videoWidth;\n\tcanvas.height = videoHeight;\n\tsubtitleStyles.padding = videoWidth * subtitleStyles.paddingRatio;\n\tsubtitleStyles.fontSize = videoHeight * subtitleStyles.fontRatio;\n\tsubtitleStyles.lineInterval = subtitleStyles.fontSize * subtitleStyles.lineIntervalRatio;\n\tif (isSubtitleShown) {\n\t\tshowSubtitle(subtitles[subtitleIndex]);\n\t}\n\n}\n\n\n\n\n\n// TODO CORS xhr\nfunction download(mime, url) {\n\t// console.log('inside');\n\tlet xhr = new XMLHttpRequest();\n\n\txhr.open('GET', url, true);\n\txhr.withCredentials = true;\n\txhr.responseTye = 'blob';\n\n\n\txhr.onload = (e) => {\n\t\tif (this.status === 200) {\n\t\t\tlet blob = new Blob(\n\t\t\t\t[this.response],\n\t\t\t\t{\n\t\t\t\t\ttype: mime\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t// console.dir(blob);\n\n\t\t}\n\t};\n\n\txhr.send();\n}\n\n// loadMedia('video/mp4', urls.video);"],"sourceRoot":"/source/"}