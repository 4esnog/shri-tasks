{"version":3,"sources":["js/index.js"],"names":["_classCallCheck","instance","Constructor","TypeError","onMagicButtonClick","e","preventDefault","togglePreloader","Promise","all","createVideo","videoInput","value","createAudio","audioInput","fetch","subtitlesInput","then","res","canvas","width","videoWidth","height","videoHeight","backCanvas","ctx","fillStyle","canvasBgColor","fillRect","ui","appendTo","player","appendChild","video","audio","subtitles","Subtitles","subtitleStyles","padding","paddingRatio","fontSize","fontRatio","toFixed","lineInterval","lineIntervalRatio","document","querySelector","remove","err","console","dir","onPlayPause","state","paused","ended","stopped","play","scratches","shown","drawVideo","timer","setTimeout","hide","collection","index","timeLength","audioApi","mainGainNode","connect","destination","classList","clearTimeout","endTime","performance","now","shownTime","startTime","restTime","pause","disconnect","add","onStop","currentTime","src","resolve","reject","createElement","setAttribute","autoplay","addEventListener","window","AudioContext","webkitAudioContext","source","createMediaElementSource","createGain","gain","whiteNoise","createScriptProcessor","audioBufferSize","onaudioprocess","ch","outputBuffer","numberOfChannels","inputData","inputBuffer","getChannelData","outputData","i","length","white","Math","random","setInterval","getRandomInt","volumeSpreadRatio","controls","defaultMuted","style","visibility","onVideoPlay","videoSizeRatio","clientWidth","clientHeight","parseInt","getComputedStyle","videoTimelineRatio","duration","display","time","target","onVolumeChange","volume","onVolumeChangeEnd","removeEventListener","getContext","bctx","clearRect","brightnessRatio","brightnessDiffRatio","cl","r","g","b","drawImage","globalCompositeOperation","show","scratchStyle","frequency","requestAnimationFrame","drawScratches","newFps","minFps","maxFps","amount","floor","scratch","generateSingleScratch","strokeStyle","lineWidth","beginPath","moveTo","coords","from","x","y","lineTo","to","stroke","closePath","opacity","minOpacity","maxOpacity","gray","modifiers","color","a","flagX","round","flagY","minLength","maxLength","maxX","maxY","sqrt","pow","startCoords","endCoords","onWindowResize","preloader","querySelectorAll","toggle","url","method","xhr","XMLHttpRequest","open","responseType","onreadystatechange","readyState","status","responseText","send","min","max","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","UI","this","block","stop","node","text","styles","parseSrt","subtl","_this","canvasTextColor","font","fullTextHeight","content","topPadding","forEach","el","top","left","fillText","timeConst","sec","hr","temp","split","result","map","subtitle","number","startTimeSec","join","startTimeMin","startTimeHr","endTimeSec","endTimeMin","endTimeHr","splice","magicButton","getElementById","bodyStyle","bodyPadding","paddingLeft","paddingRight","hex","grainDiffRatio","mediaLoad","noiseGainNode"],"mappings":"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","file":"index.js","sourcesContent":["'use strict';\n\nclass UI {\n\tconstructor() {\n\t\tthis.block = document.createElement('div');\n\t\tthis.play = document.createElement('div');\n\t\tthis.stop = document.createElement('div');\n\t\tthis.volume = document.createElement('input');\n\n\t\tthis.block.classList.add('player-ui');\n\t\tthis.block.appendChild(this.play);\n\t\tthis.block.appendChild(this.stop);\n\t\tthis.block.appendChild(this.volume);\n\n\t\tthis.play.classList.add('player-ui__el', 'player-ui__el_play-pause', 'paused');\n\t\tthis.stop.classList.add('player-ui__el', 'player-ui__el_stop');\n\t\tthis.volume.setAttribute('type', 'range');\n\t\tthis.volume.setAttribute('touch-action', 'none');\n\t\tthis.volume.classList.add('player-ui__el', 'player-ui__el_volume');\n\n\t\tthis.play.addEventListener('click', onPlayPause);\n\t\tthis.stop.addEventListener('click', onStop);\n\t\tthis.volume.addEventListener('pointerdown', (e) => {\n\t\t\te.target.addEventListener('pointermove', onVolumeChange);\n\t\t\te.target.addEventListener('pointerup', onVolumeChangeEnd);\n\t\t});\n\n\t\tthis.volume.addEventListener('click', (e) => {\n\t\t\taudio.volume = e.target.value / 100;\n\t\t\tif (audio.volume === 0) {\n\t\t\t\te.target.classList.add('muted');\n\t\t\t} else {\n\t\t\t\te.target.classList.remove('muted');\n\t\t\t}\n\t\t});\n\t}\n\n\tappendTo(node) {\n\t\tnode.appendChild(this.block);\n\t}\n}\n\nclass Subtitles {\n\tconstructor(text, styles) {\n\t\tthis.collection = Subtitles.parseSrt(text);\n\t\tthis.startTime = null;\n\t\tthis.endTime = null;\n\t\tthis.shown = false;\n\t\tthis.index = 0;\n\t\tthis.timer = 0;\n\t\tthis.fontRatio = styles.fontRatio;\n\t\tthis.paddingRatio = styles.paddingRatio;\n\t\tthis.lineIntervalRatio = styles.lineIntervalRatio;\n\t}\n\n\t// === Парсер субтитров ===\n\tstatic parseSrt(text) {\n\t\tlet timeConst = {\n\t\t\tsec: 1000,\n\t\t\tmin: 60,\n\t\t\thr: 60\n\t\t};\n\t\tlet temp = text.split('\\n\\n');\n\n\t\tlet result = temp.map((el) => {\n\n\t\t\tlet res = {};\n\t\t\tlet subtitle = el.split('\\n');\n\n\t\t\t// === Получаем номер куска титров ===\n\t\t\tres.number = parseInt(subtitle[0]);\n\n\t\t\tlet time = subtitle[1].split(' --> ');\n\n\t\t\t// === Преобразуем время начала показа куска субтитров в MS ===\n\t\t\tlet startTime = time[0].split(':');\n\t\t\tlet startTimeSec = parseInt(startTime[2].split(',').join(''));\n\t\t\tlet startTimeMin = parseInt(startTime[1]) * timeConst.min * timeConst.sec;\n\t\t\tlet startTimeHr = parseInt(startTime[0]) * timeConst.hr * timeConst.min * timeConst.sec;\n\t\t\tstartTime = startTimeSec + startTimeMin\t+ startTimeHr;\n\t\t\tres.startTime = startTime;\n\n\t\t\t// === Преобразуем время конца показа куска субтитров в MS ===\n\t\t\tlet endTime = time[1].split(':');\n\t\t\tlet endTimeSec = parseInt(endTime[2].split(',').join(''));\n\t\t\tlet endTimeMin = parseInt(endTime[1]) * timeConst.min * timeConst.sec;\n\t\t\tlet endTimeHr = parseInt(endTime[0]) * timeConst.hr * timeConst.min * timeConst.sec;\n\t\t\tendTime = endTimeSec + endTimeMin\t+ endTimeHr;\n\t\t\tres.endTime = endTime;\n\n\t\t\tres.timeLength = endTime - startTime;\n\n\t\t\t// === Готовим основной контент субтитров ===\n\t\t\tsubtitle.splice(0, 2);\n\t\t\tres.content = subtitle;\n\n\t\t\treturn res;\n\t\t});\n\n\t\treturn result;\n\t}\n\n\t// === Показ кадра с субтитрами ===\n\tshow(subtl) {\n\t\tif (!this.shown) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// === Случайная яркость кадра (как для кадра видео) ===\n\t\tlet brightnessRatio = getRandomInt(\n\t\t\t100 - 100*brightnessDiffRatio,\n\t\t\t100 + 100*brightnessDiffRatio) / 100;\n\t\tlet cl = {\n\t\t\tr: (canvasBgColor.r * brightnessRatio).toFixed(),\n\t\t\tg: (canvasBgColor.g * brightnessRatio).toFixed(),\n\t\t\tb: (canvasBgColor.b * brightnessRatio).toFixed()\n\t\t};\n\t\t// === Рисуем фон ===\n\t\tctx.fillStyle = `rgb(${cl.r}, ${cl.g}, ${cl.b})`;\n\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\n\t\t// === Готовим текст ===\n\t\tctx.fillStyle = canvasTextColor;\n\t\tctx.font = `${this.fontSize}px \\'Oranienbaum\\'`;\n\n\t\t// === Считаем, где рисовать ===\n\t\tlet fullTextHeight = (subtl.content.length * this.fontSize)\n\t\t\t+ ((subtl.content.length - 1) * this.lineInterval);\n\t\tlet topPadding = (videoHeight - fullTextHeight) / 2;\n\n\t\t// === Рисуем текст построчно ===\n\t\tsubtl.content.forEach((el, i) => {\n\t\t\tlet top = topPadding + (this.fontSize * i)\n\t\t\t\t+ (this.lineInterval * i);\n\t\t\tlet left = this.padding;\n\t\t\tctx.fillText(el, left, top);\n\t\t\t\n\t\t});\n\t}\n\n\thide() {\n\t\tthis.startTime = null;\n\t\tthis.endTime = null;\n\t\tthis.shown = false;\n\t\tthis.index++;\n\t\tvideo.play();\n\t}\n\n}\n\n// === Получаем уже присутствующие узлы DOM ===\nconst magicButton = document.getElementById('magic-button');\nconst videoInput = document.getElementById('video');\nconst audioInput = document.getElementById('audio');\nconst subtitlesInput = document.getElementById('subtitles');\nconst player = document.getElementById('player');\nconst scratches = document.getElementById('scratches');\n\n// === Инициализируем основной и вспомогательный canvas ===\nconst backCanvas = document.createElement('canvas');\nconst canvas = document.createElement('canvas');\nbackCanvas.setAttribute('crossorigin', 'anonymus');\ncanvas.setAttribute('crossorigin', 'anonymus');\nconst\tctx = canvas.getContext('2d');\n\nconst ui = new UI();\n\n\nlet bodyStyle = getComputedStyle(document.querySelectorAll('body')[0]);\nlet bodyPadding = parseInt(bodyStyle.paddingLeft) + parseInt(bodyStyle.paddingRight);\n\n// === НАСТРОЙКИ ===\n// Цвет фона субтитров\nconst canvasBgColor = {\n\tr: 16,\n\tg: 20,\n\tb: 16,\n\thex: \"#101410\"\n};\nconst canvasTextColor = '#e1e8e2'; // Цвет текста субтитров\nconst brightnessDiffRatio = 0.3;   // Коэффициент разброса яркости кадров\nconst grainDiffRatio = 0.15;       // Коэффициент зернистости (шума)\nconst minFps = 20;\nconst maxFps = 40;\nconst scratchStyle = {\n\tminLength: 5,\t\t\t\t\t\t\t\t\t\t // Длина и прозрачность царапин,\n\tmaxLength: 20,   \t\t\t\t\t\t\t\t // в % от высоты видео (от 0 до 100)\n\tminOpacity: 30,  \t\t\t\t\t\t\t\t // 0 .. 100\n\tmaxOpacity: 90,  \t\t\t\t\t\t\t\t // 0 .. 100\n\tfrequency: 0.75, \t\t\t\t\t\t\t\t // 0 .. 1\n}\nconst subtitleStyles = {\n\tfontRatio: 0.055,\n\tpaddingRatio: 0.1,\n\tlineIntervalRatio: 0.5\n};\nconst volumeSpreadRatio = 0.15;\nconst audioBufferSize = 512;\n// === END НАСТРОЙКИ ===\n\n\nlet state = {\n\tpaused: true,\n\tmediaLoad: 0,\n};\n\nlet\tvideoWidth,\n\t\tvideoHeight,\n\t\tvideoSizeRatio,\n\t\tvideoTimelineRatio,\n\t\tvideo,\n\t\taudio,\n\t\tsubtitles,\n\t\tnoiseGainNode,\n\t\taudioApi = {};\n\n\n// === Первоначальные обработчики ===\nmagicButton.addEventListener('click', onMagicButtonClick);\ncanvas.addEventListener('click', onPlayPause);\nwindow.addEventListener('resize', onWindowResize);\n\n\n\n// === Начинаем магию по клику кнопки \"Заглушить\" ===\nfunction onMagicButtonClick(e) {\n\t\n\te.preventDefault();\n\ttogglePreloader(true);\n\t\n\t// === Асинхронно грузим видео, аудио и субтитры ===\n\tPromise.all([\n\t\tcreateVideo('http://cors.io/?u=' + videoInput.value),\n\t\tcreateAudio('http://cors.io/?u=' + audioInput.value),\n\t\tfetch(subtitlesInput.value, 'GET')\n\t]).then(res => {\n\n\t\t// === Настраиваем canvas ===\n\t\tcanvas.width = videoWidth;\n\t\tcanvas.height = videoHeight;\n\t\tbackCanvas.width = videoWidth;\n\t\tbackCanvas.height = videoHeight;\n\n\t\tctx.fillStyle = canvasBgColor;\n\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\t\t\n\t\t// === Добавляем UI и canvas на плеер ===\n\t\tui.appendTo(player);\n\t\tplayer.appendChild(canvas);\n\n\t\tvideo = res[0];\n\t\taudio = res[1];\n\t\tsubtitles = new Subtitles(res[2], subtitleStyles);\n\n\t\t// === Рассчитываем размеры и отступы для показа субтитров ===\n\t\tsubtitles.padding = videoWidth * subtitles.paddingRatio;\n\t\tsubtitles.fontSize = (videoHeight * subtitles.fontRatio).toFixed();\n\t\tsubtitles.lineInterval = subtitles.fontSize * subtitles.lineIntervalRatio;\n\n\t\tdocument.querySelector('#popup').remove();\n\t\ttogglePreloader(false);\n\n\t}).catch(err => {\n\t\tconsole.dir(err);\n\t});\n\n}\n\n// === Обработка паузы / запуска видео ===\nfunction onPlayPause(e) {\n\tif (state.paused || video.ended) {\n\t\tstate.paused = false;\n\t\tstate.stopped = false;\n\t\taudio.play();\n    scratches.play();\n\n\t\tif (subtitles.shown) {\n\t\t\tdrawVideo(video, canvas, backCanvas, videoWidth, videoHeight);\n\t\t\tsubtitles.timer = setTimeout(\n\t\t\t\t() => {subtitles.hide()},\n\t\t\t\tsubtitles.collection[subtitles.index].timeLength\n\t\t\t);\n\t\t} else {\n\t\t\tvideo.play();\n\t\t}\n\n\t\taudioApi.mainGainNode.connect(audioApi.ctx.destination);\n\t\tui.play.classList.remove('paused');\n\n\t} else {\n\t\tstate.paused = true;\n\n\t\tif (subtitles.shown) {\n\t\t\tclearTimeout(subtitles.timer);\n\t\t\tsubtitles.endTime = performance.now();\n\t\t\tsubtitles.shownTime = (subtitles.endTime - subtitles.startTime).toFixed();\n\t\t\tsubtitles.restTime = subtitles.collection[subtitles.index].timeLength - subtitles.shownTime;\n\t\t}\n\n\t\tvideo.pause();\n    scratches.pause();\n\t\taudio.pause();\n\t\taudioApi.mainGainNode.disconnect();\n\t\tui.play.classList.add('paused');\n\t}\n}\n\n// === Обработка нажатия кнопки \"стоп\" ===\nfunction onStop(e) {\n\t\tstate.stopped = true;\n\t\tclearTimeout(subtitles.timer);\n\t\tvideo.pause();\n    scratches.pause();\n\t\taudio.pause();\n\t\taudioApi.mainGainNode.disconnect();\n\t\tvideo.currentTime = 0;\n\t\taudio.currentTime = 0;\n\t\tsubtitles.index = 0;\n\t\tui.play.classList.add('paused');\n\t}\n\n// === Загрузка и настройка аудио ===\nfunction createAudio(src) {\n\treturn new Promise((resolve, reject) => {\n\t\ttry {\n\t\t\tlet audio = document.createElement('audio');\n\t\t\taudio.setAttribute('crossorigin', 'anonymus');\n\t\t\taudio.src = src;\n\t\t\taudio.autoplay = false;\n\t\t\taudio.addEventListener('loadeddata', (e) => {\n\n\t\t\t\t// === Добавляем шумы к видео, используя Web Audio API ===\n\t\t\t\taudioApi.ctx = new (window.AudioContext || window.webkitAudioContext)();\n\t\t\t\taudioApi.source = audioApi.ctx.createMediaElementSource(audio);\n\t\t\t\taudioApi.mainGainNode = audioApi.ctx.createGain();\n\t\t\t\taudioApi.mainGainNode.gain.value = 0.5;\n\n\t\t\t\taudioApi.whiteNoise = audioApi.ctx.createScriptProcessor(audioBufferSize / 2, 1, 1);\n\n\t\t\t\taudioApi.whiteNoise.onaudioprocess = function(e) {\n\n\t\t\t\t\tfor (let ch = 0; ch < e.outputBuffer.numberOfChannels; ch++) {\n\t\t\t\t\t\tlet inputData = e.inputBuffer.getChannelData(ch);\n\t\t\t\t\t\tlet outputData = e.outputBuffer.getChannelData(ch);\t\n\n\t\t\t\t\t\tfor (let i = 0; i < e.inputBuffer.length; i++) {\n\t\t\t\t\t\t\tlet white = Math.random() * 2 - 1;\n\t\t\t\t\t\t\toutputData[i] = inputData[i] + white * 0.08;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\taudioApi.source.connect(audioApi.mainGainNode);\n\t\t\t\taudioApi.whiteNoise.connect(audioApi.mainGainNode);\n\n\t\t\t\tsetInterval(() => {\n\t\t\t\t\taudioApi.mainGainNode.gain.value += getRandomInt(\n\t\t\t\t\t\t-100 * volumeSpreadRatio,\n\t\t\t\t\t\t100 * volumeSpreadRatio) / 1000;\n\t\t\t\t}, 200);\n\n\t\t\t\tresolve(audio);\n\t\t\t});\n\n\t\t} catch(e) {\n\n\t\t\treject(e);\n\t\t\n\t\t}\n\t});\n}\n\n// === Загрузка и настройка видео ===\nfunction createVideo(src) {\n\treturn new Promise((resolve, reject) => {\n\t\ttry {\n\n\t\t\tlet video = document.createElement('video');\n\t\t\tvideo.setAttribute('crossorigin', 'anonymus');\n\t\t\tvideo.setAttribute('preload', 'true');\n\t\t\tvideo.src = src;\n\t\t\tvideo.autoplay = false;\n\t\t\tvideo.controls = false;\n\t\t\tvideo.defaultMuted = true;\n\t\t\tvideo.style.visibility = 'hidden';\n\n\t\t\tvideo.addEventListener('play', onVideoPlay, false);\n\t\t\t\n\t\t\tvideo.addEventListener('loadeddata', (e) => {\n\t\t\t\tdocument.querySelector('body').appendChild(video);\n\n\t\t\t\tvideoSizeRatio = video.clientWidth / video.clientHeight;\n\t\t\t\tvideoWidth = parseInt(getComputedStyle(player).width).toFixed();\n\t\t\t\tvideoHeight = videoWidth / videoSizeRatio;\n\t\t\t\tvideoTimelineRatio = video.duration / 100;\n\t\t\t\t\n\t\t\t\tvideo.style.display = 'none';\n\t\t\t\t\n\t\t\t\tresolve(video);\n\t\t\t});\n\n\t\t\t// === Обработчик timeupdate проверяет, нужно ли рисовать субтитры ===\n\t\t\tvideo.addEventListener('timeupdate', (e) => {\n\t\t\t\tlet time = (e.target.currentTime * 1000).toFixed();\n\t\t\t\tif ((time >= subtitles.collection[subtitles.index].endTime)\n\t\t\t\t\t  && !state.paused\n\t\t\t\t\t  && !subtitles.shown) {\n\n\t\t\t\t\tvideo.pause();\n\t\t\t\t\tsubtitles.shown = true;\n\t\t\t\t\tsubtitles.startTime = performance.now();\n\t\t\t\t\tsubtitles.timer = setTimeout(() => {subtitles.hide()}, subtitles.collection[subtitles.index].timeLength);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t});\n\n\t\t} catch(e) {\n\t\t\t\n\t\t\treject(e);\n\t\t\n\t\t}\n\t});\n}\n\n\n// === Запускаем отрисовку видео на canvas ===\nfunction onVideoPlay(e) {\n\tdrawVideo(video, canvas, backCanvas, videoWidth, videoHeight);\n}\n\nfunction onVolumeChange(e) {\n\taudioApi.mainGainNode.gain.value = parseInt(e.target.value) / 100;\n\t\n\tif (audio.volume === 0) {\n\t\te.target.classList.add('muted');\n\t} else {\n\t\te.target.classList.remove('muted');\n\t}\n}\n\nfunction onVolumeChangeEnd(e) {\n\te.target.removeEventListener('pointermove', onVolumeChange);\n\te.target.removeEventListener('pointerup', onVolumeChangeEnd);\n}\n\n// === Draw video on canvas with Effects ===\nfunction drawVideo(video, canvas, backCanvas, width, height) {\n\t\n\tif (state.paused || video.ended || state.stopped) {\n\t\taudio.pause();\n\t\treturn false;\n\t}\n\t\n\tconst ctx = canvas.getContext('2d');\n\tconst bctx = backCanvas.getContext('2d');\n\n\t// === Обработка и рисование видео ===\n\tif (!video.paused && !subtitles.shown) {\n\t\t\n\t\t// === Чистим холсты ===\n\t\tbctx.clearRect(0, 0, width, height);\n\t\tctx.clearRect(0, 0, width, height);\n\n    // === Случайная яркость кадра ===\n    let brightnessRatio = getRandomInt(\n      100 - 100*brightnessDiffRatio,\n      100 + 100*brightnessDiffRatio) / 100;\n    let cl = {\n      r: (210 * brightnessRatio).toFixed(),\n      g: (210 * brightnessRatio).toFixed(),\n      b: (200 * brightnessRatio).toFixed()\n    };\n\n    // === Обрабатываем кадры на вспомагательном canvas ===\n    bctx.fillStyle = `rgb(${cl.r}, ${cl.g}, ${cl.b})`;\n    bctx.drawImage(video, 0, 0, width, height);\n    bctx.globalCompositeOperation = 'color';\n    bctx.fillRect(0, 0, width, height);\n    bctx.globalCompositeOperation = 'exclusion';\n    bctx.drawImage(scratches, 0, 0, width, height);\n\n\t\t// === Обработанное изображение рисуем на видимый canvas ===\n    ctx.drawImage(backCanvas, 0, 0, width, height);\n\t}\n\t\n\t// === Рисуем субтитры ===\n\tif (subtitles.shown) {\n\t\tsubtitles.show(subtitles.collection[subtitles.index]);\n\t}\n\n\t// === Добавляем царапины ===\n\tif (Math.random() < scratchStyle.frequency) {\n\t\trequestAnimationFrame(() => {\n\t\t\tdrawScratches(canvas);\n\t\t});\t\n\t}\n\t\n\t// === Имитируем плавающий FPS, будто плёнка прокручивается руками ===\n\tlet newFps = 1000 / getRandomInt(minFps, maxFps); // 1000 - ms in s\n\n\tsetTimeout(() => {\n\t\trequestAnimationFrame(() => {\n\t\t\tdrawVideo(video, canvas, backCanvas, videoWidth, videoHeight)\n\t\t});\n\t}, newFps);\n}\n\n// === Рисование случайного числа случайных царапин ===\nfunction drawScratches(canvas) {\n\tconst ctx = canvas.getContext('2d');\n\tconst width = canvas.width;\n\tconst height = canvas.height;\n\n\t// === Случайное количество царапин ===\n\tconst amount = Math.floor(getRandomInt(0, 100) - 90);\n\n\tfor (let i = 0; i <= amount; i++) {\n\t\tlet scratch = generateSingleScratch(canvas);\n\t\tctx.strokeStyle = scratch.style;\n\t\tctx.lineWidth = scratch.width;\n\n\t\t// === Рисование царапины ===\n\t\tctx.beginPath();\n\t\tctx.moveTo(scratch.coords.from.x, scratch.coords.from.y);\n\t\tctx.lineTo(scratch.coords.to.x, scratch.coords.to.y);\n\t\tctx.stroke();\n\t\tctx.closePath();\n\t}\n}\n\n// === Генерация одной царапины (но не рисование) ===\nfunction generateSingleScratch(canvas) {\n\tconst ctx = canvas.getContext('2d');\n\tconst width = canvas.width;\n\tconst height = canvas.height;\n\n\t// === Генерация цвета царапины ===\n\tlet opacity = getRandomInt(scratchStyle.minOpacity, scratchStyle.maxOpacity) / 100;\n\tlet gray = getRandomInt(140, 180);\n\tlet modifiers = {\n\t\tr: getRandomInt(-20, 20),\n\t\tg: getRandomInt(-20, 20),\n\t\tb: getRandomInt(-20, 20)\n\t};\n\tlet color = {\n\t\tr: gray + modifiers.r,\n\t\tg: gray + modifiers.g,\n\t\tb: gray + modifiers.b,\n\t\ta: opacity\n\t};\n\n\tlet strokeStyle = `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`;\n\n\t// === Генерация толщины царапины ===\n\tlet lineWidth = getRandomInt(1, 2);\n\t\n\t// === Генерация координат царапины ===\n\t// flag = -1 или 1\n\tlet flagX = 2 * Math.round(Math.random()) - 1;\n\tlet flagY = 2 * Math.round(Math.random()) - 1;\n\n\t// === Длина царапины ===\n\tlet length = getRandomInt(height * scratchStyle.minLength / 100,\n\t\theight * scratchStyle.maxLength / 100);\n\t// === Координаты царапины ===\n\tlet maxX = getRandomInt(0, length);\n\tlet maxY = Math.sqrt(Math.pow(length, 2) - Math.pow(maxX, 2));\n\n\tlet startCoords = {\n\t\tx: getRandomInt(0, width),\n\t\ty: getRandomInt(0, height),\n\t};\n\n\tlet endCoords = {\n\t\tx: startCoords.x + maxX*flagX,\n\t\ty: startCoords.y + maxY*flagY,\n\t};\n\n\tlet coords = {\n\t\tfrom: startCoords,\n\t\tto: endCoords\n\t};\n\n\treturn {\n\t\tstyle: strokeStyle,\n\t\twidth: lineWidth,\n\t\tcoords: coords\n\t};\n\n}\n\n// === Перенастройка всего при resize страницы ===\nfunction onWindowResize(e) {\n\t\n\t// === Считаем новые размеры canvas ===\n\tvideoWidth = parseInt(getComputedStyle(player).width).toFixed();\n\tvideoHeight = videoWidth / videoSizeRatio;\n\n\t// === Меняем размеры canvas ===\n\tcanvas.width = videoWidth;\n\tcanvas.height = videoHeight;\n\tbackCanvas.width = videoWidth;\n\tbackCanvas.height = videoHeight;\n\n\t// === Считаем новые размеры и отступы для субтитров ===\n\tsubtitles.padding = videoWidth * subtitles.paddingRatio;\n\tsubtitles.fontSize = (videoHeight * subtitles.fontRatio).toFixed();\n\tsubtitles.lineInterval = subtitles.fontSize * subtitles.lineIntervalRatio;\n\n}\n\n// === Показать / скрыть прелоадер ===\nfunction togglePreloader(state) {\n\n\tlet preloader = document.querySelectorAll('.preloader')[0];\n\tif (state === true) {\n\t\tpreloader.classList.add('shown');\n\t} else if (state === false) {\n\t\tpreloader.classList.remove('shown');\n\t} else {\n\t\tpreloader.classList.toggle('shown');\n\t}\n\n}\n\n// === Обёртка для XHR с использованием Promise ===\nfunction fetch(url, method) {\n\tmethod = method || 'GET';\n\n\treturn new Promise((resolve, reject) => {\n\t\t\n\t\tlet xhr = new XMLHttpRequest();\n\t\txhr.open(method, url, true);\n\t\txhr.responseType = 'text';\n\n\t\txhr.onreadystatechange = (e) => {\n\n\t\t\tif (xhr.readyState === 4) {\n\t\t\t\tif (xhr.status !== 200) {\n\t\t\t\t\treject(xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(xhr.responseText);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\txhr.send();\n\n\t});\n}\n\n// === Получить случайное число от min до max ===\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}"],"sourceRoot":"/source/"}