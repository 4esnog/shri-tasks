{"version":3,"sources":["js/index.js"],"names":["onMagicButtonClick","e","preventDefault","togglePreloader","createVideo","videoInput","value","then","videoEl","canvas","width","videoWidth","height","videoHeight","backCanvas","ctx","fillStyle","canvasBgColor","fillRect","player","appendChild","ui","block","video","document","querySelector","remove","createAudio","audioInput","audioEl","audio","fetch","subtitlesInput","text","subtitles","parseSrt","onPlayPause","state","paused","ended","stopped","play","subtitleShown","drawVideo","subtitleTimer","setTimeout","hideSubtitle","subtitleIndex","timeLength","console","dir","audioApi","mainGainNode","connect","destination","classList","clearInterval","subtitleEndTime","performance","now","subtitleShownTime","subtitleStartTime","toFixed","subtitleRestTime","pause","disconnect","add","onStop","clearTimeout","currentTime","src","Promise","resolve","reject","createElement","setAttribute","autoplay","addEventListener","window","AudioContext","webkitAudioContext","source","createMediaElementSource","createGain","gain","pinkNoise","createScriptProcessor","audioBufferSize","onaudioprocess","ch","outputBuffer","numberOfChannels","inputData","inputBuffer","getChannelData","outputData","i","length","white","Math","random","setInterval","getRandomInt","volumeSpreadRatio","controls","defaultMuted","style","visibility","onVideoPlay","videoSizeRatio","clientWidth","clientHeight","parseInt","getComputedStyle","videoTimelineRatio","duration","display","subtitleStyles","padding","paddingRatio","fontSize","fontRatio","lineInterval","lineIntervalRatio","time","target","endTime","log","createUI","stop","volume","onVolumeChange","onVolumeChangeEnd","removeEventListener","_this","this","getContext","bctx","clearRect","drawImage","imgData","getImageData","data","brightnessRatio","brightnessDiffRatio","grainRatio","grainDiffRatio","r","g","b","avg","putImageData","showSubtitle","scratchStyle","frequency","requestAnimationFrame","drawScratches","newFps","minFps","maxFps","bind","amount","floor","scratch","generateSingleScratch","strokeStyle","lineWidth","beginPath","moveTo","coords","from","x","y","lineTo","to","stroke","closePath","opacity","minOpacity","maxOpacity","gray","modifiers","color","a","flagX","round","flagY","minLength","maxLength","maxX","maxY","sqrt","pow","startCoords","endCoords","subtl","cl","canvasTextColor","font","fullTextHeight","content","topPadding","forEach","el","top","left","fillText","timeConst","sec","min","hr","temp","split","result","map","res","subtitle","number","startTime","startTimeSec","join","startTimeMin","startTimeHr","endTimeSec","endTimeMin","endTimeHr","splice","onWindowResize","preloader","querySelectorAll","toggle","url","method","xhr","XMLHttpRequest","open","responseType","onreadystatechange","readyState","status","responseText","send","max","magicButton","getElementById","bodyStyle","bodyPadding","paddingLeft","paddingRight","hex","mediaLoad","noiseGainNode"],"mappings":"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","file":"index.js","sourcesContent":["'use strict';\n\n// Get existing DOM nodes\nconst magicButton = document.getElementById('magic-button');\nconst videoInput = document.getElementById('video');\nconst audioInput = document.getElementById('audio');\nconst subtitlesInput = document.getElementById('subtitles');\nconst player = document.getElementById('player');\n\n// Init player UI\nconst ui = createUI();\n\n// Init canvas w/ styles\nconst backCanvas = document.createElement('canvas');\nconst canvas = document.createElement('canvas');\nbackCanvas.setAttribute('crossorigin', 'anonymus');\ncanvas.setAttribute('crossorigin', 'anonymus');\nconst\tctx = canvas.getContext('2d');\n\n\nlet bodyStyle = getComputedStyle(document.querySelectorAll('body')[0]);\nlet bodyPadding = parseInt(bodyStyle.paddingLeft) + parseInt(bodyStyle.paddingRight);\n\n// === НАСТРОЙКИ ===\n// Цвет фона субтитров\nconst canvasBgColor = {\n\tr: 16,\n\tg: 20,\n\tb: 16,\n\thex: \"#101410\"\n};\nconst canvasTextColor = '#e1e8e2'; // Цвет текста субтитров\nconst brightnessDiffRatio = 0.2; // Коэффициент разброса яркости кадров\nconst grainDiffRatio = 0.15; // Коэффициент зернистости (шума)\nconst minFps = 18;\nconst maxFps = 26;\nconst scratchStyle = {\n\tminLength: 5,    // Длина и прозрачность царапин,\n\tmaxLength: 20,   // в % от высоты видео (от 0 до 100)\n\tminOpacity: 30,  // 0 .. 100\n\tmaxOpacity: 90,  // 0 .. 100\n\tfrequency: 0.75, // 0 .. 1\n}\n// const downsampleRatio = 5;\nconst subtitleStyles = {\n\tfontRatio: 0.055,\n\tpaddingRatio: 0.1,\n\tlineIntervalRatio: 0.5\n};\nconst volumeSpreadRatio = 0.15;\nconst audioBufferSize = 512;\n// === END НАСТРОЙКИ ===\n\n\nlet state = {\n\tpaused: true,\n\tsubtitleShown: false,\n\tsubtitleIndex: 0,\n\tsubtitleTimer: 0,\n\tmediaLoad: 0,\n};\n\nlet\tvideoWidth,\n\t\tvideoHeight,\n\t\tvideoSizeRatio,\n\t\tvideoTimelineRatio,\n\t\tvideo,\n\t\taudio,\n\t\tsubtitles,\n\t\tnoiseGainNode,\n\t\taudioApi = {};\n\n\n// === Set initial event handlers ===\nmagicButton.addEventListener('click', onMagicButtonClick);\ncanvas.addEventListener('click', onPlayPause);\nwindow.addEventListener('resize', onWindowResize);\n\n\n// === Helpers ===\n\n// === Handle \"Maigc\" button click ===\nfunction onMagicButtonClick(e) {\n\t\n\te.preventDefault();\n\ttogglePreloader(true);\n\t\n\tcreateVideo('http://cors.io/?u=' + videoInput.value)\n\t\t.then((videoEl) => {\n\t\t\t\n\t\t\tcanvas.width = videoWidth;\n\t\t\tcanvas.height = videoHeight;\n\n\t\t\tbackCanvas.width = videoWidth;\n\t\t\tbackCanvas.height = videoHeight;\n\t\t\tctx.fillStyle = canvasBgColor;\n\t\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\t\t\tplayer.appendChild(ui.block);\n\t\t\tplayer.appendChild(canvas);\n\n\t\t\tvideo = videoEl;\n\t\t\tdocument.querySelector('#popup').remove();\n\t\t\ttogglePreloader(false);\n\t\t}\n\t);\n\t\n\tcreateAudio('http://cors.io/?u=' + audioInput.value)\n\t\t.then((audioEl) => {\n\t\t\taudio = audioEl;\n\t\t}\n\t);\n\n\tfetch(subtitlesInput.value, 'GET')\n\t\t.then((text) => {\n\t\t\tsubtitles = parseSrt(text);\n\t\t});\n\n}\n\nfunction onPlayPause(e) {\n\tif (state.paused || video.ended) {\n\t\t// video.play();\n\t\tstate.paused = false;\n\t\tstate.stopped = false;\n\t\taudio.play();\n\t\tif (state.subtitleShown) {\n\t\t\t// video.pause();\n\t\t\tdrawVideo(video, canvas, backCanvas, videoWidth, videoHeight);\n\t\t\tstate.subtitleTimer = setTimeout(hideSubtitle, subtitles[state.subtitleIndex].timeLength);\n\t\t\tconsole.dir('Resume subtitles');\n\t\t} else {\n\t\t\tvideo.play();\n\t\t\tconsole.dir('Resume without subtitles');\n\t\t}\n\t\taudioApi.mainGainNode.connect(audioApi.ctx.destination);\n\t\tui.play.classList.remove('paused');\n\n\t} else {\n\t\tstate.paused = true;\n\t\tif (state.subtitleShown) {\n\t\t\tclearInterval(state.subtitleTimer);\n\t\t\tstate.subtitleEndTime = performance.now();\n\t\t\tstate.subtitleShownTime = (state.subtitleEndTime - state.subtitleStartTime).toFixed();\n\t\t\tstate.subtitleRestTime = subtitles[state.subtitleIndex].timeLength - state.subtitleShownTime;\n\t\t}\n\n\t\tvideo.pause();\n\t\taudio.pause();\n\t\taudioApi.mainGainNode.disconnect();\n\t\tui.play.classList.add('paused');\n\t}\n}\n\nfunction onStop(e) {\n\t\tstate.stopped = true;\n\t\tclearTimeout(state.subtitleTimer);\n\t\tvideo.pause();\n\t\taudio.pause();\n\t\taudioApi.mainGainNode.disconnect();\n\t\tvideo.currentTime = 0;\n\t\taudio.currentTime = 0;\n\t\tstate.subtitleIndex = 0;\n\t\tui.play.classList.add('paused');\n\t\t// ui.timeline.value = 0;\n\t}\n\n// === Process audio from input ===\nfunction createAudio(src) {\n\treturn new Promise((resolve, reject) => {\n\t\ttry {\n\t\t\tlet audio = document.createElement('audio');\n\t\t\taudio.setAttribute('crossorigin', 'anonymus');\n\t\t\taudio.src = src;\n\t\t\taudio.autoplay = false;\n\t\t\taudio.addEventListener('loadeddata', (e) => {\n\n\t\t\t\taudioApi.ctx = new (window.AudioContext || window.webkitAudioContext)();\n\t\t\t\taudioApi.source = audioApi.ctx.createMediaElementSource(audio);\n\t\t\t\taudioApi.mainGainNode = audioApi.ctx.createGain();\n\t\t\t\taudioApi.mainGainNode.gain.value = 0.5;\n\n\t\t\t\taudioApi.pinkNoise = audioApi.ctx.createScriptProcessor(audioBufferSize / 2, 1, 1);\n\n\t\t\t\taudioApi.pinkNoise.onaudioprocess = function(e) {\n\n\t\t\t\t\tfor (let ch = 0; ch < e.outputBuffer.numberOfChannels; ch++) {\n\t\t\t\t\t\tlet inputData = e.inputBuffer.getChannelData(ch);\n\t\t\t\t\t\tlet outputData = e.outputBuffer.getChannelData(ch);\t\n\n\t\t\t\t\t\tfor (let i = 0; i < e.inputBuffer.length; i++) {\n\t\t\t\t\t\t\tlet white = Math.random() * 2 - 1;\n\t\t\t\t\t\t\toutputData[i] = inputData[i] + white * 0.03;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\taudioApi.source.connect(audioApi.mainGainNode);\n\t\t\t\taudioApi.pinkNoise.connect(audioApi.mainGainNode);\n\n\t\t\t\tsetInterval(() => {\n\t\t\t\t\taudioApi.mainGainNode.gain.value += getRandomInt(\n\t\t\t\t\t\t-100 * volumeSpreadRatio,\n\t\t\t\t\t\t100 * volumeSpreadRatio) / 1000;\n\t\t\t\t}, 200);\n\n\t\t\t\tresolve(audio);\n\t\t\t\t\n\t\t\t});\n\n\t\t} catch(e) {\n\n\t\t\treject(e);\n\t\t\n\t\t}\n\t\t\n\t});\n\n}\n\n// === Process video from input ===\nfunction createVideo(src) {\n\treturn new Promise((resolve, reject) => {\n\t\ttry {\n\n\t\t\tlet video = document.createElement('video');\n\t\t\tvideo.setAttribute('crossorigin', 'anonymus');\n\t\t\tvideo.setAttribute('preload', 'true');\n\t\t\tvideo.src = src;\n\t\t\tvideo.autoplay = false;\n\t\t\tvideo.controls = false;\n\t\t\tvideo.defaultMuted = true;\n\t\t\tvideo.style.visibility = 'hidden';\n\n\t\t\tvideo.addEventListener('play', onVideoPlay, false);\n\t\t\t\n\t\t\tvideo.addEventListener('loadeddata', (e) => {\n\t\t\t\tdocument.querySelector('body').appendChild(video);\n\n\t\t\t\tvideoSizeRatio = video.clientWidth / video.clientHeight;\n\t\t\t\tvideoWidth = parseInt(getComputedStyle(player).width).toFixed();\n\t\t\t\tvideoHeight = videoWidth / videoSizeRatio;\n\t\t\t\tvideoTimelineRatio = video.duration / 100;\n\t\t\t\t\n\t\t\t\tvideo.style.display = 'none';\n\n\t\t\t\tsubtitleStyles.padding = videoWidth * subtitleStyles.paddingRatio;\n\t\t\t\tsubtitleStyles.fontSize = videoHeight * subtitleStyles.fontRatio;\n\t\t\t\tsubtitleStyles.lineInterval = subtitleStyles.fontSize * subtitleStyles.lineIntervalRatio;\n\t\t\t\t\n\t\t\t\tresolve(video);\n\t\t\t});\n\n\t\t\tvideo.addEventListener('timeupdate', (e) => {\n\t\t\t\tlet time = (e.target.currentTime * 1000).toFixed();\n\t\t\t\tif ((time >= subtitles[state.subtitleIndex].endTime) && !state.paused) {\n\t\t\t\t\tstate.subtitleShown = true;\n\t\t\t\t\tstate.subtitleStartTime = performance.now();\n\t\t\t\t\tconsole.log('Start subtitles: ', state.subtitleStartTime);\n\t\t\t\t\tvideo.pause();\n\t\t\t\t\tstate.subtitleTimer = setTimeout(hideSubtitle, subtitles[state.subtitleIndex].timeLength);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t});\n\n\t\t} catch(e) {\n\t\t\t\n\t\t\treject(e);\n\t\t\n\t\t}\n\t\t\n\t});\n\n}\n\n// === Init UI for canvas player\nfunction createUI() {\n\tlet ui = {\n\t\tblock: document.createElement('div'),\n\t\tplay: document.createElement('div'),\n\t\tstop: document.createElement('div'),\n\t\t// timeline: document.createElement('input'),\n\t\tvolume: document.createElement('input')\n\t};\n\tui.block.classList.add('player-ui');\n\tui.block.appendChild(ui.play);\n\tui.block.appendChild(ui.stop);\n\t// ui.block.appendChild(ui.timeline);\n\tui.block.appendChild(ui.volume);\n\n\tui.play.classList.add('player-ui__el', 'player-ui__el_play-pause', 'paused');\n\tui.stop.classList.add('player-ui__el', 'player-ui__el_stop');\n\t// ui.timeline.setAttribute('type', 'range');\n\t// ui.timeline.classList.add('player-ui__el', 'player-ui__el_timeline');\n\t// ui.timeline.value = 0;\n\tui.volume.setAttribute('type', 'range');\n\tui.volume.setAttribute('touch-action', 'none');\n\tui.volume.classList.add('player-ui__el', 'player-ui__el_volume');\n\n\tui.play.addEventListener('click', onPlayPause);\n\n\tui.stop.addEventListener('click', onStop);\n\n\t// ui.timeline.addEventListener('change', (e) => {\n\t// \tvideo.currentTime = parseInt(e.target.value) * videoTimelineRatio;\n\t// \taudio.currentTime = video.currentTime;\n\t// });\n\n\tui.volume.addEventListener('pointerdown', (e) => {\n\t\te.target.addEventListener('pointermove', onVolumeChange);\n\t\te.target.addEventListener('pointerup', onVolumeChangeEnd);\n\t});\n\n\tui.volume.addEventListener('click', (e) => {\n\t\taudio.volume = e.target.value / 100;\n\t\tif (audio.volume === 0) {\n\t\t\te.target.classList.add('muted');\n\t\t} else {\n\t\t\te.target.classList.remove('muted');\n\t\t}\n\t});\n\n\treturn ui;\n}\n\n// === Process video.play() ===\nfunction onVideoPlay(e) {\n\tdrawVideo(video, canvas, backCanvas, videoWidth, videoHeight);\n}\n\nfunction onVolumeChange(e) {\n\t// audio.volume = parseInt(e.target.value) / 100;\n\taudioApi.mainGainNode.gain.value = parseInt(e.target.value) / 100;\n\t\n\tif (audio.volume === 0) {\n\t\te.target.classList.add('muted');\n\t} else {\n\t\te.target.classList.remove('muted');\n\t}\n}\n\nfunction onVolumeChangeEnd(e) {\n\te.target.removeEventListener('pointermove', onVolumeChange);\n\te.target.removeEventListener('pointerup', onVolumeChangeEnd);\n}\n\n// === Draw video on canvas with Effects ===\nfunction drawVideo(video, canvas, backCanvas, width, height) {\n\t\n\tif (state.paused || video.ended || state.stopped) {\n\t\taudio.pause();\n\t\treturn false;\n\t}\n\n\tconst ctx = canvas.getContext('2d');\n\tconst bctx = backCanvas.getContext('2d');\n\n\tif (!video.paused && !state.subtitleShown) {\n\t\tbctx.clearRect(0, 0, width, height);\n\t\tctx.clearRect(0, 0, width, height);\n\t\t\n\t\tbctx.drawImage(video, 0, 0, width, height);\n\t\tlet imgData = bctx.getImageData(0, 0, width, height);\n\t\tlet data = imgData.data;\n\t\tlet brightnessRatio = getRandomInt(\n\t\t\t100 - 100*brightnessDiffRatio,\n\t\t\t100 + 100*brightnessDiffRatio) / 100;\n\n\t\tfor (let i = 0; i < data.length; i+=4) {\n\t\t\tlet grainRatio = getRandomInt(\n\t\t\t\t100 - 100*grainDiffRatio,\n\t\t\t\t100 + 100*grainDiffRatio) / 100;\n\n\t\t\tlet r = data[i];\n\t\t\tlet g = data[i+1];\n\t\t\tlet b = data[i+2];\n\n\t\t\tlet avg = ((0.21 * r) + (0.72 * g) + (0.07 * b)) * brightnessRatio * grainRatio;\n\n\t\t\tdata[i] = avg + 15 * grainRatio;\n\t\t\tdata[i+1] = avg + 10 * grainRatio;\n\t\t\tdata[i+2] = avg;\n\t\t}\n\n\t\tctx.putImageData(imgData, 0, 0);\n\t}\n\t\n\tif (state.subtitleShown) {\n\t\tshowSubtitle(subtitles[state.subtitleIndex]);\n\t}\n\n\tif (Math.random() < scratchStyle.frequency) {\n\t\trequestAnimationFrame(() => {\n\t\t\tdrawScratches(canvas);\n\t\t});\t\n\t}\n\t\n\tlet newFps = 1000 / getRandomInt(minFps, maxFps); // 1000 - ms in s\n\n\tsetTimeout(() => {\n\t\trequestAnimationFrame(drawVideo.bind(this, video, canvas, backCanvas, videoWidth, videoHeight));\n\t}, newFps);\n}\n\n// === Рисование случайного числа случайных царапин ===\nfunction drawScratches(canvas) {\n\tconst ctx = canvas.getContext('2d');\n\tconst width = canvas.width;\n\tconst height = canvas.height;\n\n\tconst amount = Math.floor(getRandomInt(0, 100) - 90); // MAGIC 2\n\n\tfor (let i = 0; i <= amount; i++) {\n\t\tlet scratch = generateSingleScratch(canvas);\n\t\tctx.strokeStyle = scratch.style;\n\t\tctx.lineWidth = scratch.width;\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(scratch.coords.from.x, scratch.coords.from.y);\n\t\tctx.lineTo(scratch.coords.to.x, scratch.coords.to.y);\n\t\tctx.stroke();\n\t\tctx.closePath();\n\t}\n}\n\n// === Генерация одной царапины (но не рисование) ===\nfunction generateSingleScratch(canvas) {\n\tconst ctx = canvas.getContext('2d');\n\tconst width = canvas.width;\n\tconst height = canvas.height;\n\n\t// === Генерация цвета царапины ===\n\tlet opacity = getRandomInt(scratchStyle.minOpacity, scratchStyle.maxOpacity) / 100;\n\tlet gray = getRandomInt(140, 180);\n\tlet modifiers = {\n\t\tr: getRandomInt(-20, 20),\n\t\tg: getRandomInt(-20, 20),\n\t\tb: getRandomInt(-20, 20)\n\t};\n\tlet color = {\n\t\tr: gray + modifiers.r,\n\t\tg: gray + modifiers.g,\n\t\tb: gray + modifiers.b,\n\t\ta: opacity\n\t};\n\n\tlet strokeStyle = `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`;\n\n\t// === Генерация толщины царапины ===\n\tlet lineWidth = getRandomInt(1, 2);\n\t\n\t// === Генерация координат царапины ===\n\t// flag = -1 или 1\n\tlet flagX = 2 * Math.round(Math.random()) - 1;\n\tlet flagY = 2 * Math.round(Math.random()) - 1;\n\n\tlet length = getRandomInt(height * scratchStyle.minLength / 100,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theight * scratchStyle.maxLength / 100);\n\tlet maxX = getRandomInt(0, length);\n\tlet maxY = Math.sqrt(Math.pow(length, 2) - Math.pow(maxX, 2));\n\n\tlet startCoords = {\n\t\tx: getRandomInt(0, width),\n\t\ty: getRandomInt(0, height),\n\t};\n\n\tlet endCoords = {\n\t\tx: startCoords.x + maxX*flagX,\n\t\ty: startCoords.y + maxY*flagY,\n\t};\n\n\tlet coords = {\n\t\tfrom: startCoords,\n\t\tto: endCoords\n\t};\n\n\treturn {\n\t\tstyle: strokeStyle,\n\t\twidth: lineWidth,\n\t\tcoords: coords\n\t};\n\n}\n\n// === Показать кадр с субтитрами ===\nfunction showSubtitle(subtl) {\n\n\tif (!state.subtitleShown) {\n\t\treturn false;\n\t}\n\n\tlet brightnessRatio = getRandomInt(\n\t\t100 - 100*brightnessDiffRatio,\n\t\t100 + 100*brightnessDiffRatio) / 100;\n\tlet cl = {\n\t\tr: (canvasBgColor.r * brightnessRatio).toFixed(),\n\t\tg: (canvasBgColor.g * brightnessRatio).toFixed(),\n\t\tb: (canvasBgColor.b * brightnessRatio).toFixed()\n\t};\n\tctx.fillStyle = `rgb(${cl.r}, ${cl.g}, ${cl.b})`;\n\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\tctx.fillStyle = canvasTextColor;\n\tctx.font = `${subtitleStyles.fontSize}px Oranienbaum bold, serif`;\n\n\tlet fullTextHeight = (subtl.content.length * subtitleStyles.fontSize)\n\t\t+ ((subtl.content.length - 1) * subtitleStyles.lineInterval);\n\tlet topPadding = (videoHeight - fullTextHeight) / 2;\n\n\tsubtl.content.forEach((el, i) => {\n\t\tlet top = topPadding + (subtitleStyles.fontSize * i)\n\t\t\t+ (subtitleStyles.lineInterval * i);\n\t\tlet left = subtitleStyles.padding;\n\t\tctx.fillText(el, left, top);\n\t});\n\t\n}\n\nfunction hideSubtitle() {\n\tstate.subtitleStartTime = null;\n\tstate.subtitleEndTime = null;\n\tstate.subtitleShown = false;\n\tstate.subtitleIndex++;\n\tvideo.play();\n}\n\n// === Распарсить .SRT в Массив субтитров ===\nfunction parseSrt(text) {\n\tlet timeConst = {\n\t\tsec: 1000,\n\t\tmin: 60,\n\t\thr: 60\n\t};\n\tlet temp = text.split('\\n\\n');\n\n\tlet result = temp.map((el) => {\n\n\t\tlet res = {};\n\t\tlet subtitle = el.split('\\n');\n\n\t\t// === Get subtitle's number ===\n\t\tres.number = parseInt(subtitle[0]);\n\n\t\tlet time = subtitle[1].split(' --> ');\n\n\t\t// === Convert start time to MS ===\n\t\tlet startTime = time[0].split(':');\n\t\tlet startTimeSec = parseInt(startTime[2].split(',').join(''));\n\t\tlet startTimeMin = parseInt(startTime[1]) * timeConst.min * timeConst.sec;\n\t\tlet startTimeHr = parseInt(startTime[0]) * timeConst.hr * timeConst.min * timeConst.sec;\n\t\tstartTime = startTimeSec + startTimeMin\t+ startTimeHr;\n\t\tres.startTime = startTime;\n\n\t\t// === Convert end time to MS ===\n\t\tlet endTime = time[1].split(':');\n\t\tlet endTimeSec = parseInt(endTime[2].split(',').join(''));\n\t\tlet endTimeMin = parseInt(endTime[1]) * timeConst.min * timeConst.sec;\n\t\tlet endTimeHr = parseInt(endTime[0]) * timeConst.hr * timeConst.min * timeConst.sec;\n\t\tendTime = endTimeSec + endTimeMin\t+ endTimeHr;\n\t\tres.endTime = endTime;\n\n\t\tres.timeLength = endTime - startTime;\n\n\t\t// === Join subtitle content ===\n\t\tsubtitle.splice(0, 2);\n\t\tres.content = subtitle;\n\n\t\treturn res;\n\t});\n\n\treturn result;\n\n}\n\n// === Перенастройка всего при resize страницы ===\nfunction onWindowResize(e) {\n\t\n\tvideoWidth = parseInt(getComputedStyle(player).width).toFixed();\n\tvideoHeight = videoWidth / videoSizeRatio;\n\n\tcanvas.width = videoWidth;\n\tcanvas.height = videoHeight;\n\tbackCanvas.width = videoWidth;\n\tbackCanvas.height = videoHeight;\n\n\tsubtitleStyles.padding = videoWidth * subtitleStyles.paddingRatio;\n\tsubtitleStyles.fontSize = videoHeight * subtitleStyles.fontRatio;\n\tsubtitleStyles.lineInterval = subtitleStyles.fontSize * subtitleStyles.lineIntervalRatio;\n\n}\n\n// === Показать / скрыть прелоадер ===\nfunction togglePreloader(state) {\n\n\tlet preloader = document.querySelectorAll('.preloader')[0];\n\tif (state === true) {\n\t\tpreloader.classList.add('shown');\n\t} else if (state === false) {\n\t\tpreloader.classList.remove('shown');\n\t} else {\n\t\tpreloader.classList.toggle('shown');\n\t}\n\n}\n\n// === Обёртка для XHR с использованием Promise ===\nfunction fetch(url, method) {\n\tmethod = method || 'GET';\n\n\treturn new Promise((resolve, reject) => {\n\t\t\n\t\tlet xhr = new XMLHttpRequest();\n\t\txhr.open(method, url, true);\n\t\txhr.responseType = 'text';\n\n\t\txhr.onreadystatechange = (e) => {\n\n\t\t\tif (xhr.readyState === 4) {\n\t\t\t\tif (xhr.status !== 200) {\n\t\t\t\t\treject(xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(xhr.responseText);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\txhr.send();\n\n\t});\n}\n\n// === Получить случайное число от min до max ===\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\n\n\n\n\n// function prepareWebGL(canvas, gl, sourceCanvas) {\n//     var program = gl.createProgram();\n\n//     var vertexCode = 'attribute vec2 coordinates;' +\n//         'attribute vec2 texture_coordinates;' +\n//         'varying vec2 v_texcoord;' +\n//         'void main() {' +\n//         '  gl_Position = vec4(coordinates,0.0, 1.0);' +\n//         '  v_texcoord = texture_coordinates;' +\n//         '}';\n\n//     var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n//     gl.shaderSource(vertexShader, vertexCode);\n//     gl.compileShader(vertexShader);\n\n//     var fragmentCode = 'precision mediump float;' +\n//         'varying vec2 v_texcoord;' +\n//         'uniform sampler2D u_texture;' +\n//         'uniform float u_time;' +\n//         'float rand(vec2 co){' +\n//         '   return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);' +\n//         '}' +\n//         'void main() {' +\n//         '   gl_FragColor = texture2D(u_texture, v_texcoord) * .8 + texture2D(u_texture, v_texcoord) * rand(v_texcoord * u_time) * .2;' +\n//         '}';\n\n//     var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n//     gl.shaderSource(fragmentShader, fragmentCode);\n//     gl.compileShader(fragmentShader);\n\n//     gl.attachShader(program, vertexShader);\n//     gl.attachShader(program, fragmentShader);\n\n//     gl.linkProgram(program);\n//     gl.useProgram(program);\n\n//     var positionLocation = gl.getAttribLocation(program, 'coordinates');\n//     var texcoordLocation = gl.getAttribLocation(program, 'texture_coordinates');\n//     GL_TIME_UNIFORM = gl.getUniformLocation(program, 'u_time');\n\n//     var buffer = gl.createBuffer();\n//     var vertices = [\n//         -1, -1,\n//         1, -1,\n//         -1, 1,\n//         -1, 1,\n//         1, -1,\n//         1, 1\n//     ];\n//     gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n//     gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\n//     gl.enableVertexAttribArray(positionLocation);\n//     gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n//     buffer = gl.createBuffer();\n//     var textureCoordinates = [\n//         0, 1,\n//         1, 1,\n//         0, 0,\n//         0, 0,\n//         1, 1,\n//         1, 0\n//     ];\n//     gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n//     gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(textureCoordinates), gl.STATIC_DRAW);\n//     gl.enableVertexAttribArray(texcoordLocation);\n//     gl.vertexAttribPointer(texcoordLocation, 2, gl.FLOAT, false, 0, 0);\n// }\n\n\n// function postprocessWebGL(canvas, gl, sourceCanvas, delta) {\n//     GL_TIME += delta;\n//     gl.uniform1f(GL_TIME_UNIFORM, GL_TIME / 1000);\n//     var texture = gl.createTexture();\n//     gl.bindTexture(gl.TEXTURE_2D, texture);\n//     gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n//     gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n//     gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n//     gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n//     gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, sourceCanvas);\n\n//     gl.viewport(0,0,canvas.width,canvas.height);\n//     gl.enable(gl.DEPTH_TEST);\n//     gl.clear(gl.COLOR_BUFFER_BIT);\n//     gl.drawArrays(gl.TRIANGLES, 0, 6);\n// }"],"sourceRoot":"/source/"}